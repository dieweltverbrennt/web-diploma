{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport apiRequest from '@/axios.js';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const router = useRouter();\n    onMounted(async () => {\n      // console.log(apiRequest.defaults)\n      // try {\n      //     const response = await apiRequest.get(`/login`, {\n      //         email: 'admin1@gmail.com',\n      //         name: 'admin1',\n      //         password: '123123123',\n      //         withCredentials: true \n      //         });\n      //     console.log(response);\n      // } catch (error) {\n      //     console.error('Ошибка при получении данных:', error);\n      // }\n    });\n    const onClick = e => {\n      e.preventDefault();\n      apiRequest.post('/login', {\n        name: 'admin1',\n        password: '123123123',\n        withCredentials: true\n      }).then(response => {\n        if (response.data.token) {\n          store.commit('login', response.data.token);\n          apiRequest.get('/access', {\n            headers: {\n              Authorization: `Bearer ${store.getters.token}`\n            }\n          }).then(response => {\n            if (response.data.success) {\n              console.l;\n              router.push({\n                name: 'redactor-admin'\n              });\n            }\n          });\n        } else {\n          console.error('Неверный логин или пароль');\n        }\n      });\n    };\n    const __returned__ = {\n      store,\n      router,\n      onClick,\n      ref,\n      onMounted,\n      get apiRequest() {\n        return apiRequest;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","apiRequest","useStore","useRouter","store","router","onClick","e","preventDefault","post","name","password","withCredentials","then","response","data","token","commit","get","headers","Authorization","getters","success","console","l","push","error"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/components/admin/LoginPage.vue"],"sourcesContent":["<template>\r\n    <section class=\"login\">\r\n      <header class=\"login__header\">\r\n        <h2 class=\"login__title\">Авторизация</h2>\r\n      </header>\r\n      <div class=\"login__wrapper\">\r\n        <form class=\"login__form\" accept-charset=\"utf-8\">\r\n          <label class=\"login__label\" for=\"email\">\r\n            E-mail\r\n            <input class=\"login__input\" type=\"email\" placeholder=\"example@domain.xyz\" name=\"email\" required>\r\n          </label>\r\n          <label class=\"login__label\" for=\"pwd\">\r\n            Пароль\r\n            <input class=\"login__input\" type=\"password\" placeholder=\"\" name=\"password\" autocomplete=\"on\" required>\r\n          </label>\r\n          <div class=\"text-center\">\r\n            <input value=\"Авторизоваться\"  @click=\"onClick\" type=\"submit\" class=\"login__button\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nonMounted(async () => {\r\n    // console.log(apiRequest.defaults)\r\n    // try {\r\n    //     const response = await apiRequest.get(`/login`, {\r\n    //         email: 'admin1@gmail.com',\r\n    //         name: 'admin1',\r\n    //         password: '123123123',\r\n    //         withCredentials: true \r\n    //         });\r\n    //     console.log(response);\r\n    // } catch (error) {\r\n    //     console.error('Ошибка при получении данных:', error);\r\n    // }\r\n});\r\n\r\nconst onClick = ( (e) => {\r\n    e.preventDefault();\r\n    apiRequest.post('/login', {\r\n      name: 'admin1',\r\n      password: '123123123',\r\n      withCredentials: true\r\n    }).then(response => {\r\n      if(response.data.token) {\r\n        store.commit('login', response.data.token);\r\n        apiRequest.get('/access', {\r\n          headers: {\r\n            Authorization: `Bearer ${store.getters.token}`\r\n          }\r\n        }).then(response => {\r\n          if(response.data.success) {\r\n            console.l\r\n            router.push({ name: 'redactor-admin' });\r\n          }\r\n        })\r\n      } else {\r\n        console.error('Неверный логин или пароль')\r\n      }\r\n    })\r\n});\r\n</script>\r\n"],"mappings":";AAwBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,MAAM,GAAGF,SAAS,CAAC,CAAC;IAE1BH,SAAS,CAAC,YAAY;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACH,CAAC;IAEF,MAAMM,OAAO,GAAMC,CAAC,IAAK;MACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBP,UAAU,CAACQ,IAAI,CAAC,QAAQ,EAAE;QACxBC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE,WAAW;QACrBC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAClB,IAAGA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;UACtBZ,KAAK,CAACa,MAAM,CAAC,OAAO,EAAEH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;UAC1Cf,UAAU,CAACiB,GAAG,CAAC,SAAS,EAAE;YACxBC,OAAO,EAAE;cACPC,aAAa,EAAG,UAAShB,KAAK,CAACiB,OAAO,CAACL,KAAM;YAC/C;UACF,CAAC,CAAC,CAACH,IAAI,CAACC,QAAQ,IAAI;YAClB,IAAGA,QAAQ,CAACC,IAAI,CAACO,OAAO,EAAE;cACxBC,OAAO,CAACC,CAAC;cACTnB,MAAM,CAACoB,IAAI,CAAC;gBAAEf,IAAI,EAAE;cAAiB,CAAC,CAAC;YACzC;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLa,OAAO,CAACG,KAAK,CAAC,2BAA2B,CAAC;QAC5C;MACF,CAAC,CAAC;IACN,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}