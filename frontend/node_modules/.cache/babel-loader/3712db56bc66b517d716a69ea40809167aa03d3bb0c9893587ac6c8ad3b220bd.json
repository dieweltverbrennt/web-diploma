{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport apiRequest from '@/axios.js';\nimport CreateModal from '@/components/admin/redactor/ModalCreate.vue';\nimport RedactModal from '@/components/admin/redactor/ModalRedact.vue';\n// Управление вкладками\n\nexport default {\n  __name: 'RedactorPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const halls = ref(false);\n    const hallConf = ref(false);\n    const prices = ref(false);\n    const sessions = ref(true);\n    const sale = ref(false);\n    // Управление ценами на места\n    const selectedHallPrices = ref(null);\n    const standartPrices = ref({});\n    const vipPrices = ref({});\n    const newStandartPrices = ref({});\n    const newVipPrices = ref({});\n    // Данные кинозалов\n    const hallsData = ref([]);\n    const hallsDataNew = ref([]);\n    const selectedHall = ref(null);\n    const seatsChanges = ref([]);\n    const changedSeatsIds = ref([]);\n    const newSeats = ref([]);\n    const deletedSeats = ref([]);\n    const currentHall = computed(() => {\n      if (hallsDataNew.value.length > 0) {\n        const current = hallsDataNew.value.find(item => item.hall_number === selectedHall.value);\n        return current;\n      }\n    });\n    // Данные фильмов\n    const filmsData = ref({});\n    const sessionStyle = item => {\n      const timeStart = item.start_time.split(':');\n      const startH = timeStart[0] * 30;\n      const startM = timeStart[1] * 2;\n      const duration = parseInt(item.film.duration.split(' ')[0]) / 2;\n      return `width: ${duration}px; background-color: rgb(133, 255, 137); left: ${startH + startM}px;`;\n    };\n    const newSessionStyle = item => {\n      const timeStart = item.start.split(':');\n      const startH = parseInt(timeStart[0]) * 30;\n      const startM = parseInt(timeStart[1]) * 2;\n      return `width: ${item.duration}px; background-color: #85ffd3; left: ${startH + startM}px;`;\n    };\n    const isOpenCreateModal = ref(false);\n    const isOpenRedactModal = ref(false);\n    const selectedFilm = ref(null);\n    // Данные сеансов\n    const sessionsToDelete = ref([]);\n    const newSessions = ref([]);\n    // Активны ли залы\n    const isActiveHalls = computed(() => {\n      const notActive = hallsData.value.find(item => item.is_active === 0);\n      if (notActive) {\n        return true;\n      }\n      return false;\n    });\n    onMounted(async () => {\n      try {\n        const response = await apiRequest.get(`/halls`);\n        hallsData.value = response.data.halls;\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\n        selectedHall.value = 1;\n        selectedHallPrices.value = 1;\n        hallsData.value.forEach(item => {\n          if (item.seats.find(item => item.type === 'standart')) {\n            standartPrices.value[item.hall_number] = item.seats.find(item => item.type === 'standart').price;\n            newStandartPrices.value[item.hall_number] = item.seats.find(item => item.type === 'standart').price;\n          } else {\n            standartPrices.value[item.hall_number] = 0;\n            newStandartPrices.value[item.hall_number] = 0;\n          }\n          if (item.seats.find(item => item.type === 'vip')) {\n            vipPrices.value[item.hall_number] = item.seats.find(item => item.type === 'vip').price;\n            newVipPrices.value[item.hall_number] = item.seats.find(item => item.type === 'vip').price;\n          } else {\n            vipPrices.value[item.hall_number] = 0;\n            newVipPrices.value[item.hall_number] = 0;\n          }\n        });\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n      try {\n        const response = await apiRequest.get(`/films`);\n        filmsData.value = response.data.films;\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    });\n\n    // Конфигурации кинозалов\n    const createNewHall = async () => {\n      try {\n        const response = await apiRequest.post(`/halls`, {\n          hall_number: null,\n          rows_count: null,\n          seats_in_row_count: null,\n          seat_count: null\n        });\n        hallsData.value = response.data.halls;\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    };\n    const deleteHall = async id => {\n      try {\n        const response = await apiRequest.post(`/halls/${id}`, {\n          _method: 'DELETE'\n        });\n        hallsData.value = response.data.halls;\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    };\n    const chairType = (row, seat) => {\n      const current = currentHall.value.seats.find(item => item.row_number === row && item.seat_number == seat);\n      if (current === undefined) {\n        currentHall.value.seats.push({\n          row_number: row,\n          seat_number: seat,\n          type: 'standart',\n          hall_id: currentHall.value.id\n        });\n        newSeats.value.push({\n          row_number: row,\n          seat_number: seat,\n          type: 'standart',\n          hall_id: currentHall.value.id\n        });\n        return 'conf-step__chair_standart';\n      }\n      return 'conf-step__chair_' + current.type;\n    };\n    const changeChairType = (row, seat) => {\n      const current = currentHall.value.seats.find(item => item.row_number === row && item.seat_number == seat);\n      if (current.type === 'standart') {\n        current.type = 'vip';\n      } else if (current.type === 'vip') {\n        current.type = 'disabled';\n      } else {\n        current.type = 'standart';\n      }\n      if (current.id) {\n        changedSeatsIds.value = changedSeatsIds.value.filter(item => item !== current.id);\n        changedSeatsIds.value.push(current.id);\n        seatsChanges.value = seatsChanges.value.filter(item => item.id !== current.id);\n        seatsChanges.value.push({\n          id: current.id,\n          type: current.type\n        });\n      } else {\n        const newCurrentSeat = newSeats.value.find(item => item.row_number === row && item.seat_number == seat);\n        newCurrentSeat.type = current.type;\n      }\n    };\n    const resetHallsChanges = () => {\n      hallsDataNew.value = hallsData.value;\n    };\n    const saveHallsChanges = async () => {\n      const initialData = hallsData.value.find(item => item.id === currentHall.value.id);\n      // если количество рядов уменьшилось, записываем в массив лишние места\n      if (initialData.rows_count > currentHall.value.rows_count) {\n        currentHall.value.seats.forEach(item => {\n          if (item.row_number > currentHall.value.rows_count) {\n            deletedSeats.value.push(item.id);\n          }\n        });\n      }\n      // если количество сидений в ряду уменьшилось, записываем в массив лишние места\n      if (initialData.seats_in_row_count > currentHall.value.seats_in_row_count) {\n        currentHall.value.seats.forEach(item => {\n          if (item.seat_number > currentHall.value.seats_in_row_count) deletedSeats.value.push(item.id);\n        });\n      }\n      // проверяем, если есть удаленные места то удаляем их\n      if (deletedSeats.value.length > 0) {\n        try {\n          const response = await apiRequest.post(`/seats/${deletedSeats.value.join(',')}`, {\n            _method: 'DELETE'\n          });\n        } catch (error) {\n          console.error('Ошибка при удалении данных:', error);\n        }\n      }\n      // проверяем, если появились новые места, то добавляем их\n      if (newSeats.value.length > 0) {\n        try {\n          const response = await apiRequest.post(`/seats`, {\n            seats: newSeats.value\n          });\n        } catch (error) {\n          console.error('Ошибка при получении данных:', error);\n        }\n      }\n      // проверяем, если есть измененные типы мест и обновляем их\n      if (seatsChanges.value.length > 0) {\n        try {\n          const response = await apiRequest.put(`/seats/${changedSeatsIds.value.join(',')}`, {\n            seats: seatsChanges.value\n          });\n        } catch (error) {\n          console.error('Ошибка при получении удалении:', error);\n        }\n      }\n      // обновляем данные зала и получаем новый массив с обновленными местами\n      try {\n        const response = await apiRequest.put(`/halls/${currentHall.value.id}`, {\n          rows: currentHall.value.rows_count,\n          seats: currentHall.value.seats_in_row_count\n        });\n        hallsData.value = response.data.halls;\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    };\n    // Конфигурации цен\n    const resetPriceChanges = () => {\n      newStandartPrices.value[selectedHallPrices.value] = standartPrices.value[selectedHallPrices.value];\n      newVipPrices.value[selectedHallPrices.value] = vipPrices.value[selectedHallPrices.value];\n    };\n    const savePriceChanges = async () => {\n      const hallId = hallsData.value.find(item => item.hall_number === selectedHallPrices.value).id;\n      if (newStandartPrices.value[selectedHallPrices.value] !== standartPrices.value[selectedHallPrices.value]) {\n        try {\n          const response = await apiRequest.put(`/seats/${selectedHallPrices.value}`, {\n            hall: hallId,\n            price: newStandartPrices.value[selectedHallPrices.value],\n            type: 'standart'\n          });\n          // hallsData.value.seats = response.data;\n        } catch (error) {\n          console.error('Ошибка при изменении цен:', error);\n        }\n      }\n    };\n    // Конфигурации сеансов\n    const openCreateModal = () => {\n      isOpenCreateModal.value = true;\n    };\n    const openRedactModal = item => {\n      selectedFilm.value = item;\n      isOpenRedactModal.value = true;\n    };\n    const addFilm = async film => {\n      try {\n        const response = await apiRequest.post(`/films`, {\n          film: film\n        });\n        filmsData.value = response.data.films;\n      } catch (error) {\n        console.error('Ошибка при создании фильма:', error);\n      }\n    };\n    const deleteSession = id => {\n      sessionsToDelete.value.push(id);\n    };\n    const addSession = props => {\n      newSessions.value.push(props);\n      // console.log(newSessions.value);\n    };\n    const resetSessionsChanges = async () => {\n      sessionsToDelete.value = [];\n      newSessions.value = [];\n    };\n    const saveSessionsChanges = async () => {\n      if (sessionsToDelete.value.length > 0) {\n        try {\n          const response = await apiRequest.post(`/sessions/${sessionsToDelete.value.join(',')}`, {\n            _method: 'DELETE'\n          });\n          hallsData.value = response.data.halls;\n        } catch (error) {\n          console.error('Ошибка при получении данных:', error);\n        }\n      }\n      // \n      if (newSessions.value.length > 0) {\n        try {\n          const response = await apiRequest.post(`/sessions`, {\n            sessions: newSessions.value\n          });\n          hallsData.value = response.data.halls;\n        } catch (error) {\n          console.error('Ошибка при получении данных:', error);\n        }\n      }\n    };\n    // Открытие продажи билетов // Смена статуса зала\n    const openSales = async () => {\n      const closedHallsIds = [];\n      hallsData.value.forEach(item => {\n        if (item.is_active === 0) {\n          closedHallsIds.push(item.id);\n        }\n      });\n      try {\n        const response = await apiRequest.put(`/halls/${closedHallsIds.join(',')}`, {\n          isActive: 1\n        });\n        hallsData.value = response.data.halls;\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\n      } catch (error) {\n        console.error('Ошибка при открытии продаж', error);\n      }\n    };\n    const closeSales = async () => {\n      const openedHallsIds = [];\n      hallsData.value.forEach(item => {\n        openedHallsIds.push(item.id);\n      });\n      try {\n        const response = await apiRequest.put(`/halls/${closedHallsIds.join(',')}`, {\n          isActive: 1\n        });\n        hallsData.value = response.data.halls;\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\n      } catch (error) {\n        console.error('Ошибка при открытии продаж', error);\n      }\n    };\n    const __returned__ = {\n      halls,\n      hallConf,\n      prices,\n      sessions,\n      sale,\n      selectedHallPrices,\n      standartPrices,\n      vipPrices,\n      newStandartPrices,\n      newVipPrices,\n      hallsData,\n      hallsDataNew,\n      selectedHall,\n      seatsChanges,\n      changedSeatsIds,\n      newSeats,\n      deletedSeats,\n      currentHall,\n      filmsData,\n      sessionStyle,\n      newSessionStyle,\n      isOpenCreateModal,\n      isOpenRedactModal,\n      selectedFilm,\n      sessionsToDelete,\n      newSessions,\n      isActiveHalls,\n      createNewHall,\n      deleteHall,\n      chairType,\n      changeChairType,\n      resetHallsChanges,\n      saveHallsChanges,\n      resetPriceChanges,\n      savePriceChanges,\n      openCreateModal,\n      openRedactModal,\n      addFilm,\n      deleteSession,\n      addSession,\n      resetSessionsChanges,\n      saveSessionsChanges,\n      openSales,\n      closeSales,\n      ref,\n      onMounted,\n      computed,\n      get apiRequest() {\n        return apiRequest;\n      },\n      CreateModal,\n      RedactModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","apiRequest","CreateModal","RedactModal","halls","hallConf","prices","sessions","sale","selectedHallPrices","standartPrices","vipPrices","newStandartPrices","newVipPrices","hallsData","hallsDataNew","selectedHall","seatsChanges","changedSeatsIds","newSeats","deletedSeats","currentHall","value","length","current","find","item","hall_number","filmsData","sessionStyle","timeStart","start_time","split","startH","startM","duration","parseInt","film","newSessionStyle","start","isOpenCreateModal","isOpenRedactModal","selectedFilm","sessionsToDelete","newSessions","isActiveHalls","notActive","is_active","response","get","data","JSON","parse","stringify","forEach","seats","type","price","error","console","films","createNewHall","post","rows_count","seats_in_row_count","seat_count","deleteHall","id","_method","chairType","row","seat","row_number","seat_number","undefined","push","hall_id","changeChairType","filter","newCurrentSeat","resetHallsChanges","saveHallsChanges","initialData","join","put","rows","resetPriceChanges","savePriceChanges","hallId","hall","openCreateModal","openRedactModal","addFilm","deleteSession","addSession","props","resetSessionsChanges","saveSessionsChanges","openSales","closedHallsIds","isActive","closeSales","openedHallsIds"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/components/admin/RedactorPage.vue"],"sourcesContent":["<template>\r\n    <main class=\"conf-steps\">\r\n    <section class=\"conf-step\">\r\n      <header class=\"conf-step__header conf-step__header_opened\" @click=\"halls = !halls\">\r\n        <h2 class=\"conf-step__title\">Управление залами</h2>\r\n      </header>\r\n      <div class=\"conf-step__wrapper\" v-if=\"halls\">\r\n        <p class=\"conf-step__paragraph\">Доступные залы:</p>\r\n        <ul class=\"conf-step__list\">\r\n          <li v-for=\"(item, index) in hallsDataNew\" :key=\"index\">Зал {{ item.hall_number }}\r\n            <button class=\"conf-step__button conf-step__button-trash\" @click=\"deleteHall(item.id)\"></button>\r\n          </li>\r\n        </ul>\r\n        <button class=\"conf-step__button conf-step__button-accent\" @click=\"createNewHall\">Создать зал</button>\r\n      </div>\r\n    </section>\r\n    \r\n    <section class=\"conf-step\">\r\n      <header class=\"conf-step__header conf-step__header_opened\" @click=\"hallConf = !hallConf\">\r\n        <h2 class=\"conf-step__title\">Конфигурация залов</h2>\r\n      </header>\r\n      <div class=\"conf-step__wrapper\" v-if=\"hallConf\">\r\n        <p class=\"conf-step__paragraph\">Выберите зал для конфигурации:</p>\r\n        <ul class=\"conf-step__selectors-box\">\r\n          <li v-for=\"(item, index) in hallsDataNew\" :key=\"index\">\r\n            <input type=\"radio\" class=\"conf-step__radio\" name=\"chairs-hall\" :value=\"item.hall_number\" v-model=\"selectedHall\"><span class=\"conf-step__selector\">Зал {{ item.hall_number }}</span>\r\n          </li>\r\n        </ul>\r\n        <p class=\"conf-step__paragraph\">Укажите количество рядов и максимальное количество кресел в ряду:</p>\r\n        <div class=\"conf-step__legend\">\r\n          <label class=\"conf-step__label\">Рядов, шт<input type=\"number\" class=\"conf-step__input\" v-if=\"currentHall\" :placeholder=\"currentHall.rows_count\" v-model=\"currentHall.rows_count\"></label>\r\n          <span class=\"multiplier\">x</span>\r\n          <label class=\"conf-step__label\">Мест, шт<input type=\"number\" class=\"conf-step__input\" v-if=\"currentHall\" :placeholder=\"currentHall.seats_in_row_count\" v-model=\"currentHall.seats_in_row_count\"></label>\r\n        </div>\r\n        <p class=\"conf-step__paragraph\">Теперь вы можете указать типы кресел на схеме зала:</p>\r\n        <div class=\"conf-step__legend\">\r\n          <span class=\"conf-step__chair conf-step__chair_standart\"></span> — обычные кресла\r\n          <span class=\"conf-step__chair conf-step__chair_vip\"></span> — VIP кресла\r\n          <span class=\"conf-step__chair conf-step__chair_disabled\"></span> — заблокированные (нет кресла)\r\n          <p class=\"conf-step__hint\">Чтобы изменить вид кресла, нажмите по нему левой кнопкой мыши</p>\r\n        </div>  \r\n        \r\n        <div class=\"conf-step__hall\">\r\n          <div class=\"conf-step__hall-wrapper\" v-if=\"currentHall\">\r\n            <div class=\"conf-step__row\" v-for=\"(item, index) in currentHall.rows_count\" :key=\"index\">\r\n              <span :class=\"chairType(item, item_num)\" class=\"conf-step__chair\" v-for=\"(item_num, index) in currentHall.seats_in_row_count\" :key=\"index\" @click=\"changeChairType(item, item_num)\"></span>\r\n            </div> \r\n\r\n            \r\n          </div>  \r\n        </div>\r\n        \r\n        <fieldset class=\"conf-step__buttons text-center\">\r\n          <button class=\"conf-step__button conf-step__button-regular\" @click=\"resetHallsChanges\">Отмена</button>\r\n          <input type=\"submit\" value=\"Сохранить\" class=\"conf-step__button conf-step__button-accent\" @click.prevent=\"saveHallsChanges\">\r\n        </fieldset>                 \r\n      </div>\r\n    </section>\r\n    \r\n    <section class=\"conf-step\">\r\n      <header class=\"conf-step__header conf-step__header_opened\" @click=\"prices = !prices\">\r\n        <h2 class=\"conf-step__title\">Конфигурация цен</h2>\r\n      </header>\r\n      <div class=\"conf-step__wrapper\" v-if=\"prices\">\r\n        <p class=\"conf-step__paragraph\">Выберите зал для конфигурации:</p>\r\n        <ul class=\"conf-step__selectors-box\">\r\n          <li v-for=\"(item, index) in hallsDataNew\" :key=\"index\">\r\n            <input type=\"radio\" class=\"conf-step__radio\" name=\"prices-hall\" :value=\"item.hall_number\" v-model=\"selectedHallPrices\"><span class=\"conf-step__selector\">Зал {{ item.hall_number }}</span>\r\n          </li>\r\n        </ul>\r\n          \r\n        <p class=\"conf-step__paragraph\">Установите цены для типов кресел:</p>\r\n          <div class=\"conf-step__legend\">\r\n            <label class=\"conf-step__label\">Цена, рублей<input type=\"number\" min=\"0\" class=\"conf-step__input\" placeholder=\"0\" v-model=\"newStandartPrices[selectedHallPrices]\"></label>\r\n            за <span class=\"conf-step__chair conf-step__chair_standart\"></span> обычные кресла\r\n          </div>  \r\n          <div class=\"conf-step__legend\">\r\n            <label class=\"conf-step__label\">Цена, рублей<input type=\"number\" class=\"conf-step__input\" placeholder=\"0\" v-model=\"newVipPrices[selectedHallPrices]\"></label>\r\n            за <span class=\"conf-step__chair conf-step__chair_vip\"></span> VIP кресла\r\n          </div>  \r\n        \r\n        <fieldset class=\"conf-step__buttons text-center\">\r\n          <button class=\"conf-step__button conf-step__button-regular\" @click=\"resetPriceChanges\">Отмена</button>\r\n          <input type=\"submit\" value=\"Сохранить\" class=\"conf-step__button conf-step__button-accent\" @click.prevent=\"savePriceChanges\"> \r\n        </fieldset>  \r\n      </div>\r\n    </section>\r\n    \r\n    <section class=\"conf-step\">\r\n      <header class=\"conf-step__header conf-step__header_opened\" @click=\"sessions = !sessions\">\r\n        <h2 class=\"conf-step__title\">Сетка сеансов</h2>\r\n      </header>\r\n      <div class=\"conf-step__wrapper\" v-if=\"sessions\">\r\n        <p class=\"conf-step__paragraph\">\r\n          <button class=\"conf-step__button conf-step__button-accent\" @click=\"openCreateModal\">Добавить фильм</button>\r\n        </p>\r\n\r\n        <CreateModal v-if=\"isOpenCreateModal\" @closeCreateModal=\"isOpenCreateModal = false\" @addFilm=\"addFilm\"/>\r\n\r\n        <div class=\"conf-step__movies\">\r\n          <div class=\"conf-step__movie\" v-for=\"(item, index) in filmsData\" :key=\"index\" @click=\"openRedactModal(item)\">\r\n            <img class=\"conf-step__movie-poster\" alt=\"poster\" :src=\"require(`@/assets/client/img/${item.path_to_image}`)\">\r\n            <h3 class=\"conf-step__movie-title\">{{ item.name }}</h3>\r\n            <p class=\"conf-step__movie-duration\">{{ item.duration }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <RedactModal v-if=\"isOpenRedactModal\" @closeRedactModal=\"isOpenRedactModal = false\" :film=\"selectedFilm\" :halls=\"hallsData\" :newSessions=\"newSessions\" @deleteSession=\"deleteSession\" @addSession=\"addSession\"/>\r\n \r\n        <div class=\"conf-step__seances\">\r\n\r\n          <div class=\"conf-step__seances-hall\" v-for=\"(item, index) in hallsData\" :key=\"index\">\r\n            <h3 class=\"conf-step__seances-title\">Зал {{ item.hall_number }}</h3>\r\n\r\n            <div class=\"conf-step__seances-timeline\">\r\n              <div v-for=\"(el, i) in item.sessions\" :key=\"i\">\r\n                <div class=\"conf-step__seances-movie\" v-if=\"!sessionsToDelete.includes(el.id)\" :style=\"sessionStyle(el)\">\r\n                  <p class=\"conf-step__seances-movie-title\">{{ el.film.name }}</p>\r\n                  <p class=\"conf-step__seances-movie-start\">{{ el.start_time.split(':').slice(0, 2).join(':') }}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div v-for=\"(el, i) in newSessions\" :key=\"i\">\r\n                <div v-if=\"el.hallId === item.id\" class=\"conf-step__seances-movie\" :style=\"newSessionStyle(el)\">\r\n                  <p class=\"conf-step__seances-movie-title\">{{ el.filmName }}</p>\r\n                  <p class=\"conf-step__seances-movie-start\">{{ el.start }}</p>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <fieldset class=\"conf-step__buttons text-center\">\r\n          <button class=\"conf-step__button conf-step__button-regular\" @click=\"resetSessionsChanges\">Отмена</button>\r\n          <input type=\"submit\" value=\"Сохранить\" class=\"conf-step__button conf-step__button-accent\" @click.prevent=\"saveSessionsChanges\">\r\n        </fieldset>  \r\n      </div>\r\n    </section>\r\n    \r\n    <section class=\"conf-step\">\r\n      <header class=\"conf-step__header conf-step__header_opened\" @click=\"sale = !sale\">\r\n        <h2 class=\"conf-step__title\">Открыть продажи</h2>\r\n      </header>\r\n      <div class=\"conf-step__wrapper text-center\" v-if=\"sale\">\r\n        <p class=\"conf-step__paragraph\">Всё готово, теперь можно:</p>\r\n        <button v-if=\"isActiveHalls\" class=\"conf-step__button conf-step__button-accent\" @click=\"openSales\">Открыть продажу билетов</button>\r\n        <button v-else class=\"conf-step__button conf-step__button-accent\" @click=\"closeSales\">Приостановить продажу билетов</button>\r\n      </div>\r\n    </section>    \r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\nimport CreateModal from '@/components/admin/redactor/ModalCreate.vue';\r\nimport RedactModal from '@/components/admin/redactor/ModalRedact.vue';\r\n// Управление вкладками\r\nconst halls = ref(false);\r\nconst hallConf = ref(false);\r\nconst prices = ref(false);\r\nconst sessions = ref(true);\r\nconst sale = ref(false);\r\n// Управление ценами на места\r\nconst selectedHallPrices = ref(null);\r\nconst standartPrices = ref({});\r\nconst vipPrices = ref({});\r\nconst newStandartPrices = ref({});\r\nconst newVipPrices = ref({});\r\n// Данные кинозалов\r\nconst hallsData = ref([]);\r\nconst hallsDataNew = ref([]);\r\nconst selectedHall = ref(null);\r\nconst seatsChanges = ref([]);\r\nconst changedSeatsIds = ref([]);\r\nconst newSeats = ref([]);\r\nconst deletedSeats = ref([]);\r\nconst currentHall = computed(() => {\r\n    if(hallsDataNew.value.length > 0) {\r\n        const current = hallsDataNew.value.find(item => item.hall_number === selectedHall.value);\r\n        return current;\r\n    }\r\n});\r\n// Данные фильмов\r\nconst filmsData = ref({});\r\nconst sessionStyle = (item) => {\r\n  const timeStart = item.start_time.split(':');\r\n  const startH = timeStart[0] * 30;\r\n  const startM = timeStart[1] * 2;\r\n  const duration = parseInt(item.film.duration.split(' ')[0]) / 2;\r\n  return `width: ${duration}px; background-color: rgb(133, 255, 137); left: ${startH + startM}px;`;\r\n};\r\nconst newSessionStyle = (item) => {\r\n  const timeStart = item.start.split(':');\r\n  const startH = parseInt(timeStart[0]) * 30;\r\n  const startM = parseInt(timeStart[1]) * 2;\r\n  return `width: ${item.duration}px; background-color: #85ffd3; left: ${startH + startM}px;`;\r\n}\r\nconst isOpenCreateModal = ref(false);\r\nconst isOpenRedactModal = ref(false);\r\nconst selectedFilm = ref(null);\r\n// Данные сеансов\r\nconst sessionsToDelete = ref([]);\r\nconst newSessions = ref([]);\r\n// Активны ли залы\r\nconst isActiveHalls = computed(() => {\r\n  const notActive = hallsData.value.find(item => item.is_active === 0);\r\n  if(notActive) {\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const response = await apiRequest.get(`/halls`);\r\n        hallsData.value = response.data.halls;\r\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\r\n        selectedHall.value = 1;\r\n        selectedHallPrices.value = 1;\r\n        hallsData.value.forEach(item => {\r\n          if(item.seats.find(item => item.type === 'standart')) {\r\n            standartPrices.value[item.hall_number] = item.seats.find(item => item.type === 'standart').price;\r\n            newStandartPrices.value[item.hall_number] = item.seats.find(item => item.type === 'standart').price;\r\n          } else {\r\n            standartPrices.value[item.hall_number] = 0;\r\n            newStandartPrices.value[item.hall_number] = 0;\r\n          }\r\n          if(item.seats.find(item => item.type === 'vip')) {\r\n            vipPrices.value[item.hall_number] = item.seats.find(item => item.type === 'vip').price;\r\n            newVipPrices.value[item.hall_number] = item.seats.find(item => item.type === 'vip').price;\r\n          } else {\r\n            vipPrices.value[item.hall_number] = 0;\r\n            newVipPrices.value[item.hall_number] = 0;\r\n          }\r\n        })\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n\r\n    try {\r\n      const response = await apiRequest.get(`/films`);\r\n      filmsData.value = response.data.films;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n});\r\n\r\n// Конфигурации кинозалов\r\nconst createNewHall = async () => {\r\n    try {\r\n        const response = await apiRequest.post(`/halls`, {\r\n            hall_number: null,\r\n            rows_count: null,\r\n            seats_in_row_count: null,\r\n            seat_count: null\r\n        });\r\n        hallsData.value = response.data.halls;\r\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n};\r\nconst deleteHall = async (id) => {\r\n    try {\r\n        const response = await apiRequest.post(`/halls/${id}`, {\r\n            _method: 'DELETE'\r\n        });\r\n        hallsData.value = response.data.halls;\r\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n};\r\nconst chairType = (row, seat) => {\r\n  const current = currentHall.value.seats.find(item => item.row_number === row && item.seat_number == seat);\r\n  if(current === undefined) {\r\n    currentHall.value.seats.push({ row_number: row, seat_number: seat, type: 'standart', hall_id: currentHall.value.id });\r\n    newSeats.value.push({ row_number: row, seat_number: seat, type: 'standart', hall_id: currentHall.value.id });\r\n    return 'conf-step__chair_standart';\r\n  }\r\n  return 'conf-step__chair_' + current.type;\r\n};\r\nconst changeChairType = (row, seat) => {\r\n  const current = currentHall.value.seats.find(item => item.row_number === row && item.seat_number == seat);\r\n  if(current.type === 'standart') {\r\n    current.type = 'vip';\r\n  } else if (current.type === 'vip') {\r\n    current.type = 'disabled';\r\n  } else {\r\n    current.type = 'standart';\r\n  }\r\n  if(current.id) {\r\n    changedSeatsIds.value = changedSeatsIds.value.filter(item => item !== current.id)\r\n    changedSeatsIds.value.push(current.id);\r\n    seatsChanges.value = seatsChanges.value.filter(item => item.id !== current.id);\r\n    seatsChanges.value.push({ id: current.id, type: current.type });\r\n  } else {\r\n    const newCurrentSeat = newSeats.value.find(item => item.row_number === row && item.seat_number == seat);\r\n    newCurrentSeat.type = current.type;\r\n  }\r\n};\r\nconst resetHallsChanges = () => {\r\n  hallsDataNew.value = hallsData.value;\r\n};\r\nconst saveHallsChanges = async () => {\r\n  const initialData = hallsData.value.find(item => item.id === currentHall.value.id);\r\n  // если количество рядов уменьшилось, записываем в массив лишние места\r\n  if(initialData.rows_count > currentHall.value.rows_count) {\r\n    currentHall.value.seats.forEach(item => {\r\n      if(item.row_number >  currentHall.value.rows_count) {\r\n        deletedSeats.value.push(item.id);\r\n      }\r\n    });\r\n  } \r\n  // если количество сидений в ряду уменьшилось, записываем в массив лишние места\r\n  if(initialData.seats_in_row_count > currentHall.value.seats_in_row_count) {\r\n    currentHall.value.seats.forEach(item => {\r\n      if(item.seat_number > currentHall.value.seats_in_row_count)\r\n        deletedSeats.value.push(item.id);\r\n    })\r\n  }\r\n  // проверяем, если есть удаленные места то удаляем их\r\n  if(deletedSeats.value.length > 0) {\r\n    try {\r\n        const response = await apiRequest.post(`/seats/${deletedSeats.value.join(',')}`, {\r\n            _method: 'DELETE'\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка при удалении данных:', error);\r\n    }\r\n  }\r\n  // проверяем, если появились новые места, то добавляем их\r\n  if(newSeats.value.length > 0) {\r\n    try {\r\n        const response = await apiRequest.post(`/seats`, {\r\n            seats: newSeats.value\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n  }\r\n  // проверяем, если есть измененные типы мест и обновляем их\r\n  if(seatsChanges.value.length > 0) {\r\n    try {\r\n        const response = await apiRequest.put(`/seats/${changedSeatsIds.value.join(',')}`, {\r\n            seats: seatsChanges.value\r\n        });\r\n    } catch (error) {\r\n        console.error('Ошибка при получении удалении:', error);\r\n    }\r\n  }\r\n  // обновляем данные зала и получаем новый массив с обновленными местами\r\n  try {\r\n    const response = await apiRequest.put(`/halls/${currentHall.value.id}`, {\r\n        rows: currentHall.value.rows_count,\r\n        seats: currentHall.value.seats_in_row_count\r\n    });\r\n    hallsData.value = response.data.halls;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении данных:', error);\r\n  }\r\n};\r\n// Конфигурации цен\r\nconst resetPriceChanges = () => {\r\n  newStandartPrices.value[selectedHallPrices.value] = standartPrices.value[selectedHallPrices.value];\r\n  newVipPrices.value[selectedHallPrices.value] = vipPrices.value[selectedHallPrices.value];\r\n};\r\nconst savePriceChanges = async () => {\r\n  const hallId = hallsData.value.find(item => item.hall_number === selectedHallPrices.value).id;\r\n  if(newStandartPrices.value[selectedHallPrices.value] !== standartPrices.value[selectedHallPrices.value]) {\r\n    try {\r\n        const response = await apiRequest.put(`/seats/${selectedHallPrices.value}`, {\r\n            hall: hallId,\r\n            price: newStandartPrices.value[selectedHallPrices.value],\r\n            type: 'standart'\r\n        });\r\n        // hallsData.value.seats = response.data;\r\n    } catch (error) {\r\n        console.error('Ошибка при изменении цен:', error);\r\n    }\r\n  }\r\n};\r\n// Конфигурации сеансов\r\nconst openCreateModal = () => {\r\n  isOpenCreateModal.value = true;\r\n};\r\nconst openRedactModal = (item) => {\r\n  selectedFilm.value = item;\r\n  isOpenRedactModal.value = true;\r\n};\r\nconst addFilm = async (film) => {\r\n  try {\r\n    const response = await apiRequest.post(`/films`, {\r\n        film: film,\r\n    });\r\n    filmsData.value = response.data.films;\r\n  } catch (error) {\r\n    console.error('Ошибка при создании фильма:', error);\r\n  }\r\n};\r\nconst deleteSession = (id) => {\r\n  sessionsToDelete.value.push(id);\r\n};\r\nconst addSession = (props) => {\r\n  newSessions.value.push(props);\r\n  // console.log(newSessions.value);\r\n};\r\nconst resetSessionsChanges = async () => {\r\n  sessionsToDelete.value = [];\r\n  newSessions.value = [];\r\n};\r\nconst saveSessionsChanges = async () => {\r\n  if(sessionsToDelete.value.length > 0) {\r\n    try {\r\n        const response = await apiRequest.post(`/sessions/${sessionsToDelete.value.join(',')}`, {\r\n            _method: 'DELETE'\r\n        });\r\n        hallsData.value = response.data.halls;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n  }\r\n  // \r\n  if(newSessions.value.length > 0) {\r\n    try {\r\n        const response = await apiRequest.post(`/sessions`, {\r\n          sessions: newSessions.value\r\n        });\r\n        hallsData.value = response.data.halls;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n  }\r\n};\r\n// Открытие продажи билетов // Смена статуса зала\r\nconst openSales = async () => {\r\n  const closedHallsIds = [];\r\n  hallsData.value.forEach(item => {\r\n    if(item.is_active === 0) {\r\n      closedHallsIds.push(item.id);\r\n    }\r\n  })\r\n  try {\r\n        const response = await apiRequest.put(`/halls/${closedHallsIds.join(',')}`, {\r\n          isActive: 1\r\n        });\r\n        hallsData.value = response.data.halls;\r\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\r\n    } catch (error) {\r\n        console.error('Ошибка при открытии продаж', error);\r\n    }\r\n};\r\nconst closeSales = async () => {\r\n  const openedHallsIds = [];\r\n    hallsData.value.forEach(item => {\r\n      openedHallsIds.push(item.id);\r\n    })\r\n    try {\r\n        const response = await apiRequest.put(`/halls/${closedHallsIds.join(',')}`, {\r\n          isActive: 1\r\n        });\r\n        hallsData.value = response.data.halls;\r\n        hallsDataNew.value = JSON.parse(JSON.stringify(hallsData.value));\r\n    } catch (error) {\r\n        console.error('Ошибка при открытии продаж', error);\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}