{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport apiRequest from '@/axios.js';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'PaymentPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const sessionId = route.params.sessionId;\n    const seatsIds = route.params.seatsId;\n    const session = ref({});\n    const film = ref({});\n    const hall = ref({});\n    const seats = ref([]);\n    const isPaid = ref(false);\n    onMounted(async () => {\n      try {\n        const responseSession = await apiRequest.get(`/sessions/${sessionId}`);\n        session.value = responseSession.data.session;\n        film.value = responseSession.data.session.film;\n        hall.value = responseSession.data.session.hall;\n        session.value.start_time = session.value.start_time.split(':').slice(0, 2).join(':');\n        const responseSeats = await apiRequest.get(`/seats/${seatsIds}`);\n        if (responseSeats.data.seats) {\n          responseSeats.data.seats.forEach(element => {\n            seats.value.push(element.seat_number);\n          });\n        }\n        console.log(responseSeats);\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    });\n    const __returned__ = {\n      route,\n      sessionId,\n      seatsIds,\n      session,\n      film,\n      hall,\n      seats,\n      isPaid,\n      ref,\n      onMounted,\n      get apiRequest() {\n        return apiRequest;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","apiRequest","useRoute","route","sessionId","params","seatsIds","seatsId","session","film","hall","seats","isPaid","responseSession","get","value","data","start_time","split","slice","join","responseSeats","forEach","element","push","seat_number","console","log","error"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/components/client/PaymentPage.vue"],"sourcesContent":["<template>\r\n    <main>\r\n        <section class=\"ticket\">\r\n        \r\n        <header class=\"tichet__check\">\r\n            <h2 class=\"ticket__check-title\">Вы выбрали билеты:</h2>\r\n        </header>\r\n        \r\n        <div class=\"ticket__info-wrapper\">\r\n            <p class=\"ticket__info\">На фильм: <span class=\"ticket__details ticket__title\">{{ film.name }}</span></p>\r\n            <p class=\"ticket__info\">Места: <span class=\"ticket__details ticket__chairs\">{{}}</span></p>\r\n            <p class=\"ticket__info\">В зале: <span class=\"ticket__details ticket__hall\">1</span></p>\r\n            <p class=\"ticket__info\">Начало сеанса: <span class=\"ticket__details ticket__start\">18:30</span></p>\r\n            <p class=\"ticket__info\">Стоимость: <span class=\"ticket__details ticket__cost\">600</span> рублей</p>\r\n\r\n            <button class=\"acceptin-button\">Получить код бронирования</button>\r\n\r\n            <p class=\"ticket__hint\">После оплаты билет будет доступен в этом окне, а также придёт вам на почту. Покажите QR-код нашему контроллёру у входа в зал.</p>\r\n            <p class=\"ticket__hint\">Приятного просмотра!</p>\r\n        </div>\r\n        </section>     \r\n    </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst route = useRoute();\r\nconst sessionId = route.params.sessionId;\r\nconst seatsIds = route.params.seatsId;\r\n\r\nconst session = ref({});\r\nconst film = ref({});\r\nconst hall = ref({});\r\nconst seats = ref([]);\r\n\r\nconst isPaid = ref(false);\r\nonMounted(async () => {\r\n    try {\r\n        const responseSession = await apiRequest.get(`/sessions/${sessionId}`);\r\n        session.value = responseSession.data.session;\r\n        film.value = responseSession.data.session.film;\r\n        hall.value = responseSession.data.session.hall;\r\n        session.value.start_time = session.value.start_time.split(':').slice(0, 2).join(':');\r\n\r\n        const responseSeats = await apiRequest.get(`/seats/${seatsIds}`);\r\n        if(responseSeats.data.seats) {\r\n            responseSeats.data.seats.forEach(element => {\r\n                seats.value.push(element.seat_number);\r\n            });\r\n        }\r\n        console.log(responseSeats)\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n});\r\n</script>"],"mappings":";AAyBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IAErC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACD,SAAS;IACxC,MAAME,QAAQ,GAAGH,KAAK,CAACE,MAAM,CAACE,OAAO;IAErC,MAAMC,OAAO,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMU,IAAI,GAAGV,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMW,IAAI,GAAGX,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMY,KAAK,GAAGZ,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMa,MAAM,GAAGb,GAAG,CAAC,KAAK,CAAC;IACzBC,SAAS,CAAC,YAAY;MAClB,IAAI;QACA,MAAMa,eAAe,GAAG,MAAMZ,UAAU,CAACa,GAAG,CAAE,aAAYV,SAAU,EAAC,CAAC;QACtEI,OAAO,CAACO,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACR,OAAO;QAC5CC,IAAI,CAACM,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACR,OAAO,CAACC,IAAI;QAC9CC,IAAI,CAACK,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACR,OAAO,CAACE,IAAI;QAC9CF,OAAO,CAACO,KAAK,CAACE,UAAU,GAAGT,OAAO,CAACO,KAAK,CAACE,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAEpF,MAAMC,aAAa,GAAG,MAAMpB,UAAU,CAACa,GAAG,CAAE,UAASR,QAAS,EAAC,CAAC;QAChE,IAAGe,aAAa,CAACL,IAAI,CAACL,KAAK,EAAE;UACzBU,aAAa,CAACL,IAAI,CAACL,KAAK,CAACW,OAAO,CAACC,OAAO,IAAI;YACxCZ,KAAK,CAACI,KAAK,CAACS,IAAI,CAACD,OAAO,CAACE,WAAW,CAAC;UACzC,CAAC,CAAC;QACN;QACAC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MAC9B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}