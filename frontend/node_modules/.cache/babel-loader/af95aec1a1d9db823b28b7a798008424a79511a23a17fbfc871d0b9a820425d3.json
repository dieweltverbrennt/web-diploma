{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport apiRequest from '@/axios.js';\nimport { useRoute } from 'vue-router';\nimport QrcodeVue from 'vue-qrcode-component';\nexport default {\n  __name: 'PaymentPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const sessionId = route.params.sessionId;\n    const seatsIds = route.params.seatsId;\n    const session = ref({});\n    const film = ref({});\n    const hall = ref({});\n    const seats = ref([]);\n    let price = ref(null);\n    const isPaid = ref(false);\n    let qrCodeData = ref;\n    onMounted(async () => {\n      try {\n        const responseSession = await apiRequest.get(`/sessions/${sessionId}`);\n        session.value = responseSession.data.session;\n        film.value = responseSession.data.session.film;\n        hall.value = responseSession.data.session.hall;\n        session.value.start_time = session.value.start_time.split(':').slice(0, 2).join(':');\n        const responseSeats = await apiRequest.get(`/seats/${seatsIds}`);\n        price.value = 0;\n        if (responseSeats.data.seats) {\n          responseSeats.data.seats.forEach(element => {\n            seats.value.push(element.seat_number);\n            price.value += element.price;\n          });\n        }\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n      }\n    });\n    const onGetCodeClick = () => {\n      isPaid.value = true;\n    };\n    const __returned__ = {\n      route,\n      sessionId,\n      seatsIds,\n      session,\n      film,\n      hall,\n      seats,\n      get price() {\n        return price;\n      },\n      set price(v) {\n        price = v;\n      },\n      isPaid,\n      get qrCodeData() {\n        return qrCodeData;\n      },\n      set qrCodeData(v) {\n        qrCodeData = v;\n      },\n      onGetCodeClick,\n      ref,\n      onMounted,\n      get apiRequest() {\n        return apiRequest;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get QrcodeVue() {\n        return QrcodeVue;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","apiRequest","useRoute","QrcodeVue","route","sessionId","params","seatsIds","seatsId","session","film","hall","seats","price","isPaid","qrCodeData","responseSession","get","value","data","start_time","split","slice","join","responseSeats","forEach","element","push","seat_number","error","console","onGetCodeClick"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/components/client/PaymentPage.vue"],"sourcesContent":["<template>\r\n    <main>\r\n        <section class=\"ticket\">\r\n        \r\n        <header class=\"tichet__check\">\r\n            <h2 class=\"ticket__check-title\">Вы выбрали билеты:</h2>\r\n        </header>\r\n        \r\n        <div class=\"ticket__info-wrapper\">\r\n            <p class=\"ticket__info\">На фильм: <span class=\"ticket__details ticket__title\">{{ film.name }}</span></p>\r\n            <p class=\"ticket__info\">Места: <span class=\"ticket__details ticket__chairs\">{{ seats.join(', ') }}</span></p>\r\n            <p class=\"ticket__info\">В зале: <span class=\"ticket__details ticket__hall\">{{ hall.hall_number }}</span></p>\r\n            <p class=\"ticket__info\">Начало сеанса: <span class=\"ticket__details ticket__start\">{{ session.start_time }}</span></p>\r\n\r\n            <div v-if=\"isPaid\">\r\n                <!-- <img class=\"ticket__info-qr\" src=\"@/assets/client/img/qr-code.png\"> -->\r\n                <qrcode-vue :text=\"qrCodeData\"></qrcode-vue>\r\n\r\n                <p class=\"ticket__hint\">Покажите QR-код нашему контроллеру для подтверждения бронирования.</p>\r\n                <p class=\"ticket__hint\">Приятного просмотра!</p>\r\n            </div>\r\n\r\n            <div v-else>\r\n                <p class=\"ticket__info\">Стоимость: <span class=\"ticket__details ticket__cost\">{{ price }}</span> рублей</p>\r\n\r\n                <button class=\"acceptin-button\" @click=\"onGetCodeClick\">Получить код бронирования</button>\r\n\r\n                <p class=\"ticket__hint\">После оплаты билет будет доступен в этом окне, а также придёт вам на почту. Покажите QR-код нашему контроллёру у входа в зал.</p>\r\n                <p class=\"ticket__hint\">Приятного просмотра!</p>\r\n            </div>\r\n        </div>\r\n        </section>     \r\n    </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\nimport { useRoute } from 'vue-router';\r\nimport QrcodeVue from 'vue-qrcode-component';\r\n\r\nconst route = useRoute();\r\nconst sessionId = route.params.sessionId;\r\nconst seatsIds = route.params.seatsId;\r\n\r\nconst session = ref({});\r\nconst film = ref({});\r\nconst hall = ref({});\r\nconst seats = ref([]);\r\nlet price = ref(null);\r\nconst isPaid = ref(false);\r\nlet qrCodeData = ref;\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const responseSession = await apiRequest.get(`/sessions/${sessionId}`);\r\n        session.value = responseSession.data.session;\r\n        film.value = responseSession.data.session.film;\r\n        hall.value = responseSession.data.session.hall;\r\n        session.value.start_time = session.value.start_time.split(':').slice(0, 2).join(':');\r\n\r\n        const responseSeats = await apiRequest.get(`/seats/${seatsIds}`);\r\n        price.value = 0;\r\n        if(responseSeats.data.seats) {\r\n            responseSeats.data.seats.forEach(element => {\r\n                seats.value.push(element.seat_number);\r\n                price.value += element.price;\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n});\r\n\r\nconst onGetCodeClick = (() => {\r\n    isPaid.value = true;\r\n});\r\n</script>"],"mappings":";AAoCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,SAAS,MAAM,sBAAsB;;;;;;;IAE5C,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACD,SAAS;IACxC,MAAME,QAAQ,GAAGH,KAAK,CAACE,MAAM,CAACE,OAAO;IAErC,MAAMC,OAAO,GAAGV,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMW,IAAI,GAAGX,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMY,IAAI,GAAGZ,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMa,KAAK,GAAGb,GAAG,CAAC,EAAE,CAAC;IACrB,IAAIc,KAAK,GAAGd,GAAG,CAAC,IAAI,CAAC;IACrB,MAAMe,MAAM,GAAGf,GAAG,CAAC,KAAK,CAAC;IACzB,IAAIgB,UAAU,GAAGhB,GAAG;IAEpBC,SAAS,CAAC,YAAY;MAClB,IAAI;QACA,MAAMgB,eAAe,GAAG,MAAMf,UAAU,CAACgB,GAAG,CAAE,aAAYZ,SAAU,EAAC,CAAC;QACtEI,OAAO,CAACS,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACV,OAAO;QAC5CC,IAAI,CAACQ,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACV,OAAO,CAACC,IAAI;QAC9CC,IAAI,CAACO,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACV,OAAO,CAACE,IAAI;QAC9CF,OAAO,CAACS,KAAK,CAACE,UAAU,GAAGX,OAAO,CAACS,KAAK,CAACE,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAEpF,MAAMC,aAAa,GAAG,MAAMvB,UAAU,CAACgB,GAAG,CAAE,UAASV,QAAS,EAAC,CAAC;QAChEM,KAAK,CAACK,KAAK,GAAG,CAAC;QACf,IAAGM,aAAa,CAACL,IAAI,CAACP,KAAK,EAAE;UACzBY,aAAa,CAACL,IAAI,CAACP,KAAK,CAACa,OAAO,CAACC,OAAO,IAAI;YACxCd,KAAK,CAACM,KAAK,CAACS,IAAI,CAACD,OAAO,CAACE,WAAW,CAAC;YACrCf,KAAK,CAACK,KAAK,IAAIQ,OAAO,CAACb,KAAK;UAChC,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC,CAAC;IAEF,MAAME,cAAc,GAAIA,CAAA,KAAM;MAC1BjB,MAAM,CAACI,KAAK,GAAG,IAAI;IACvB,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}