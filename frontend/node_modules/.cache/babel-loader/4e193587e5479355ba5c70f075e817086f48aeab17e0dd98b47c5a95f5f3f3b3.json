{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"login__header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"login__title\"\n}, \"Авторизация\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"login__label\",\n  for: \"email\"\n}, [/*#__PURE__*/_createTextVNode(\" E-mail \"), /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"login__input\",\n  type: \"email\",\n  placeholder: \"example@domain.xyz\",\n  name: \"email\",\n  required: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"login__label\",\n  for: \"pwd\"\n}, [/*#__PURE__*/_createTextVNode(\" Пароль \"), /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"login__input\",\n  type: \"password\",\n  placeholder: \"\",\n  name: \"password\",\n  autocomplete: \"on\",\n  required: \"\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", {\n    class: \"login__wrapper\"\n  }, [_createElementVNode(\"form\", {\n    class: \"login__form\",\n    method: \"POST\",\n    \"accept-charset\": \"utf-8\"\n  }, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"input\", {\n    value: \"Авторизоваться\",\n    onClick: $setup.onClick,\n    type: \"submit\",\n    class: \"login__button\"\n  })])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createTextVNode","type","placeholder","name","required","autocomplete","_createElementBlock","_hoisted_1","_hoisted_2","method","_hoisted_3","_hoisted_4","value","onClick","$setup"],"sources":["C:\\Users\\Marya\\Desktop\\cinema-booking-app\\client\\src\\components\\admin\\LoginPage.vue"],"sourcesContent":["<template>\r\n    <section class=\"login\">\r\n      <header class=\"login__header\">\r\n        <h2 class=\"login__title\">Авторизация</h2>\r\n      </header>\r\n      <div class=\"login__wrapper\">\r\n        <form class=\"login__form\" method=\"POST\" accept-charset=\"utf-8\">\r\n          <label class=\"login__label\" for=\"email\">\r\n            E-mail\r\n            <input class=\"login__input\" type=\"email\" placeholder=\"example@domain.xyz\" name=\"email\" required>\r\n          </label>\r\n          <label class=\"login__label\" for=\"pwd\">\r\n            Пароль\r\n            <input class=\"login__input\" type=\"password\" placeholder=\"\" name=\"password\" autocomplete=\"on\" required>\r\n          </label>\r\n          <div class=\"text-center\">\r\n            <input value=\"Авторизоваться\"  @click=\"onClick\" type=\"submit\" class=\"login__button\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\n\r\nonMounted(async () => {\r\n    // console.log(apiRequest.defaults.withCredentials)\r\n    // try {\r\n    //     const response = await apiRequest.get(`/login`, {\r\n    //         email: 'admin1@gmail.com',\r\n    //         name: 'admin1',\r\n    //         password: '123123123',\r\n    //         withCredentials: true \r\n    //         });\r\n    //     console.log(response);\r\n    // } catch (error) {\r\n    //     console.error('Ошибка при получении данных:', error);\r\n    // }\r\n});\r\n\r\nconst onClick = (async () => {\r\n    try {\r\n        const token = await apiRequest.get(`/sanctum/csfr-cookie`)\r\n        const response = await apiRequest.get(`/login`, {\r\n            email: 'admin1@gmail.com',\r\n            name: 'admin1',\r\n            password: '123123123',\r\n            withCredentials: true \r\n            });\r\n        console.log(response);\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n    }\r\n});\r\n</script>\r\n"],"mappings":";;EACaA,KAAK,EAAC;AAAO;gCACpBC,mBAAA,CAES;EAFDD,KAAK,EAAC;AAAe,I,aAC3BC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAc,GAAC,aAAW,E;gCAIlCC,mBAAA,CAGQ;EAHDD,KAAK,EAAC,cAAc;EAACE,GAAG,EAAC;iBAP1CC,gBAAA,CAOkD,UAEtC,G,aAAAF,mBAAA,CAAgG;EAAzFD,KAAK,EAAC,cAAc;EAACI,IAAI,EAAC,OAAO;EAACC,WAAW,EAAC,oBAAoB;EAACC,IAAI,EAAC,OAAO;EAACC,QAAQ,EAAR;;gCAEzFN,mBAAA,CAGQ;EAHDD,KAAK,EAAC,cAAc;EAACE,GAAG,EAAC;iBAX1CC,gBAAA,CAWgD,UAEpC,G,aAAAF,mBAAA,CAAsG;EAA/FD,KAAK,EAAC,cAAc;EAACI,IAAI,EAAC,UAAU;EAACC,WAAW,EAAC,EAAE;EAACC,IAAI,EAAC,UAAU;EAACE,YAAY,EAAC,IAAI;EAACD,QAAQ,EAAR;;;uBAZrGE,mBAAA,CAmBU,WAnBVC,UAmBU,GAlBRC,UAES,EACTV,mBAAA,CAcM;IAdDD,KAAK,EAAC;EAAgB,IACzBC,mBAAA,CAYO;IAZDD,KAAK,EAAC,aAAa;IAACY,MAAM,EAAC,MAAM;IAAC,gBAAc,EAAC;MACrDC,UAGQ,EACRC,UAGQ,EACRb,mBAAA,CAEM;IAFDD,KAAK,EAAC;EAAa,IACtBC,mBAAA,CAAoF;IAA7Ec,KAAK,EAAC,gBAAgB;IAAGC,OAAK,EAAEC,MAAA,CAAAD,OAAO;IAAEZ,IAAI,EAAC,QAAQ;IAACJ,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}