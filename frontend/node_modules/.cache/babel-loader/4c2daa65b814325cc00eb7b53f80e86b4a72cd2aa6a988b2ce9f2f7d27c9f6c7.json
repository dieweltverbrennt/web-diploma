{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport ClientView from '../views/ClientView.vue';\nimport store from '@/store';\nconst routes = [{\n  path: '/',\n  name: 'client',\n  component: ClientView,\n  redirect: '/index',\n  children: [{\n    path: 'index',\n    name: 'index-client',\n    component: () => import('../components/client/IndexPage.vue')\n  }, {\n    path: 'hall/:sessionId',\n    name: 'hall-client',\n    component: () => import('../components/client/HallPage.vue'),\n    props: true\n  }, {\n    path: 'payment/:sessionId/:seatsId',\n    name: 'payment-client',\n    component: () => import('../components/client/PaymentPage.vue'),\n    props: true\n  }]\n}, {\n  path: '/admin',\n  name: 'admin',\n  redirect: '/admin/login',\n  component: () => import('../views/AdminView.vue'),\n  children: [{\n    path: 'login',\n    name: 'login-admin',\n    component: () => import('../components/admin/LoginPage.vue')\n  }, {\n    path: 'redactor',\n    name: 'redactor-admin',\n    component: () => import('../components/admin/RedactorPage.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// router.beforeEach((to, from, next) => {\n// if(to.path === '/admin/redactor') {\n// const isAuthenticated = !!store.state.token; // Проверяем, есть ли токен в Vuex\n// console.log(isAuthenticated)\n// // Если маршрут требует аутентификации, но пользователь не аутентифицирован, перенаправляем на страницу входа\n// if (!isAuthenticated) {\n//   next('/admin/login');\n// } else {\n//   next(); // Продолжаем нормальный переход\n// }\n// }\n// });\n\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/admin/redactor') {\n    console.log('wedrfjk');\n    const isAuthenticated = !!store.state.token;\n    if (isAuthenticated) {\n      next('/admin/redactor');\n    } else {\n      next('/admin/login');\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","ClientView","store","routes","path","name","component","redirect","children","props","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","console","log","isAuthenticated","state","token"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport ClientView from '../views/ClientView.vue'\nimport store from '@/store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'client',\n    component: ClientView,\n    redirect: '/index',\n    children: [\n      {\n        path: 'index',\n        name: 'index-client',\n        component: () => import('../components/client/IndexPage.vue'),\n      },\n      {\n        path: 'hall/:sessionId',\n        name: 'hall-client',\n        component: () => import('../components/client/HallPage.vue'),\n        props: true\n      },\n      {\n        path: 'payment/:sessionId/:seatsId',\n        name: 'payment-client',\n        component: () => import('../components/client/PaymentPage.vue'),\n        props: true\n      },\n    ],\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    redirect: '/admin/login',\n    component: () => import('../views/AdminView.vue'),\n    children: [\n      {\n        path: 'login',\n        name: 'login-admin',\n        component: () => import('../components/admin/LoginPage.vue'),\n      },\n      {\n        path: 'redactor',\n        name: 'redactor-admin',\n        component: () => import('../components/admin/RedactorPage.vue'),\n        meta: { requiresAuth: true }\n      },\n    ]\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// router.beforeEach((to, from, next) => {\n  // if(to.path === '/admin/redactor') {\n    // const isAuthenticated = !!store.state.token; // Проверяем, есть ли токен в Vuex\n    // console.log(isAuthenticated)\n    // // Если маршрут требует аутентификации, но пользователь не аутентифицирован, перенаправляем на страницу входа\n    // if (!isAuthenticated) {\n    //   next('/admin/login');\n    // } else {\n    //   next(); // Продолжаем нормальный переход\n    // }\n  // }\n// });\n\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/admin/redactor') {\n    console.log('wedrfjk')\n    const isAuthenticated = !!store.state.token;\n    if (isAuthenticated) {\n      next('/admin/redactor');\n    } else {\n      next('/admin/login');\n    }\n  } else {\n    next();\n  }\n});\n\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL,UAAU;EACrBM,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC;EAC9D,CAAC,EACD;IACEF,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;IAC5DG,KAAK,EAAE;EACT,CAAC,EACD;IACEL,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sCAAsC,CAAC;IAC/DG,KAAK,EAAE;EACT,CAAC;AAEL,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbE,QAAQ,EAAE,cAAc;EACxBD,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDE,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC;EAC7D,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sCAAsC,CAAC;IAC/DI,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC;AAEL,CAAC,CACF;AAED,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAACc,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb;AACF,CAAC,CAAC;;AAEF;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACF;;AAEAS,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACd,IAAI,KAAK,iBAAiB,EAAE;IACjCiB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,MAAMC,eAAe,GAAG,CAAC,CAACrB,KAAK,CAACsB,KAAK,CAACC,KAAK;IAC3C,IAAIF,eAAe,EAAE;MACnBH,IAAI,CAAC,iBAAiB,CAAC;IACzB,CAAC,MAAM;MACLA,IAAI,CAAC,cAAc,CAAC;IACtB;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAGF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}