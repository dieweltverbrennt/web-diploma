{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"login__header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"login__title\"\n}, \"Авторизация\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"login__label\",\n  for: \"email\"\n}, [/*#__PURE__*/_createTextVNode(\" E-mail \"), /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"login__input\",\n  type: \"email\",\n  placeholder: \"example@domain.xyz\",\n  name: \"email\",\n  required: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"login__label\",\n  for: \"pwd\"\n}, [/*#__PURE__*/_createTextVNode(\" Пароль \"), /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"login__input\",\n  type: \"password\",\n  placeholder: \"\",\n  name: \"password\",\n  autocomplete: \"on\",\n  required: \"\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", {\n    class: \"login__wrapper\"\n  }, [_createElementVNode(\"form\", {\n    class: \"login__form\",\n    \"accept-charset\": \"utf-8\"\n  }, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"input\", {\n    value: \"Авторизоваться\",\n    onClick: $setup.onClick,\n    type: \"submit\",\n    class: \"login__button\"\n  })])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createTextVNode","type","placeholder","name","required","autocomplete","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","value","onClick","$setup"],"sources":["C:\\Users\\Marya\\Desktop\\cinema-booking-app\\client\\src\\components\\admin\\LoginPage.vue"],"sourcesContent":["<template>\r\n    <section class=\"login\">\r\n      <header class=\"login__header\">\r\n        <h2 class=\"login__title\">Авторизация</h2>\r\n      </header>\r\n      <div class=\"login__wrapper\">\r\n        <form class=\"login__form\" accept-charset=\"utf-8\">\r\n          <label class=\"login__label\" for=\"email\">\r\n            E-mail\r\n            <input class=\"login__input\" type=\"email\" placeholder=\"example@domain.xyz\" name=\"email\" required>\r\n          </label>\r\n          <label class=\"login__label\" for=\"pwd\">\r\n            Пароль\r\n            <input class=\"login__input\" type=\"password\" placeholder=\"\" name=\"password\" autocomplete=\"on\" required>\r\n          </label>\r\n          <div class=\"text-center\">\r\n            <input value=\"Авторизоваться\"  @click=\"onClick\" type=\"submit\" class=\"login__button\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport apiRequest from '@/axios.js';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nonMounted(async () => {\r\n    // console.log(apiRequest.defaults)\r\n    // try {\r\n    //     const response = await apiRequest.get(`/login`, {\r\n    //         email: 'admin1@gmail.com',\r\n    //         name: 'admin1',\r\n    //         password: '123123123',\r\n    //         withCredentials: true \r\n    //         });\r\n    //     console.log(response);\r\n    // } catch (error) {\r\n    //     console.error('Ошибка при получении данных:', error);\r\n    // }\r\n});\r\n\r\nconst onClick = ( (e) => {\r\n    e.preventDefault();\r\n    axios.get('http://localhost:8080/sanctum/csrf-cookie').then(response => {\r\n      console.log()\r\n    })\r\n    // apiRequest.post('/login', {\r\n    //   name: 'admin1',\r\n    //   password: '123123123',\r\n    //   withCredentials: true\r\n    // }).then(response => {\r\n    //   if(response.data.token) {\r\n    //     store.commit('login', response.data.token);\r\n    //     apiRequest.get('/access', {\r\n    //       headers: {\r\n    //         Authorization: `Bearer ${store.getters.token}`\r\n    //       }\r\n    //     }).then(response => {\r\n    //       if(response.data.success) {\r\n    //         router.push({ name: 'redactor-admin' });\r\n    //       }\r\n    //     })\r\n    //   } else {\r\n    //     console.error('Неверный логин или пароль')\r\n    //   }\r\n    // })\r\n});\r\n\r\n// if(this.v$.$invalid){\r\n//             this.v$.$touch();\r\n//             return;\r\n//         }\r\n//         const resp = await axios.get(config.appBackendURL+':'+config.appBackendPort+'/sanctum/csrf-cookie').then(\r\n//             async authorisation =>{\r\n//                 const response = await axios({\r\n//                         method: 'POST',\r\n//                         url: config.appBackendURL+':'+config.appBackendPort+'/api/login',\r\n//                         data: {\r\n//                             email: state.email,\r\n//                             password: state.password,\r\n//                         },\r\n//                         headers: {\r\n//                             'X-CSRF-Token': Cookies.get('XSRF-TOKEN')\r\n//                         },\r\n//                 }).then(response=>{\r\n//                     if(response.data.status === false){\r\n//                         state.response = response.data.message;\r\n//                         setTimeout(function(){\r\n//                             state.email = \"\";\r\n//                             state.password=\"\";\r\n//                             state.response=\"\";\r\n//                         }, 3000)\r\n//                     }else{\r\n//                         state.response = response.data.message;\r\n//                         setTimeout(()=>{\r\n//                             token.getToken(response.data.token);\r\n//                             window.location.href ='/main/';\r\n//                         }, 2000);\r\n//                     }\r\n//                 })\r\n\r\n//         }).catch(err=>{\r\n//             console.log(err.response);\r\n//                 if(err.response.status === 429){\r\n//                     localStorage.setItem('Log', true);\r\n//                     localStorage.setItem('repeatEmail', state.email);\r\n//                     location.reload();\r\n//                 }\r\n//         }).finally(()=>{\r\n\r\n//         })\r\n//     }\r\n//     return{\r\n//         state,\r\n//         AuthForm,\r\n//         v$,\r\n//     }\r\n</script>\r\n"],"mappings":";;EACaA,KAAK,EAAC;AAAO;gCACpBC,mBAAA,CAES;EAFDD,KAAK,EAAC;AAAe,I,aAC3BC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAc,GAAC,aAAW,E;gCAIlCC,mBAAA,CAGQ;EAHDD,KAAK,EAAC,cAAc;EAACE,GAAG,EAAC;iBAP1CC,gBAAA,CAOkD,UAEtC,G,aAAAF,mBAAA,CAAgG;EAAzFD,KAAK,EAAC,cAAc;EAACI,IAAI,EAAC,OAAO;EAACC,WAAW,EAAC,oBAAoB;EAACC,IAAI,EAAC,OAAO;EAACC,QAAQ,EAAR;;gCAEzFN,mBAAA,CAGQ;EAHDD,KAAK,EAAC,cAAc;EAACE,GAAG,EAAC;iBAX1CC,gBAAA,CAWgD,UAEpC,G,aAAAF,mBAAA,CAAsG;EAA/FD,KAAK,EAAC,cAAc;EAACI,IAAI,EAAC,UAAU;EAACC,WAAW,EAAC,EAAE;EAACC,IAAI,EAAC,UAAU;EAACE,YAAY,EAAC,IAAI;EAACD,QAAQ,EAAR;;;uBAZrGE,mBAAA,CAmBU,WAnBVC,UAmBU,GAlBRC,UAES,EACTV,mBAAA,CAcM;IAdDD,KAAK,EAAC;EAAgB,IACzBC,mBAAA,CAYO;IAZDD,KAAK,EAAC,aAAa;IAAC,gBAAc,EAAC;MACvCY,UAGQ,EACRC,UAGQ,EACRZ,mBAAA,CAEM;IAFDD,KAAK,EAAC;EAAa,IACtBC,mBAAA,CAAoF;IAA7Ea,KAAK,EAAC,gBAAgB;IAAGC,OAAK,EAAEC,MAAA,CAAAD,OAAO;IAAEX,IAAI,EAAC,QAAQ;IAACJ,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}