{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport ClientView from '../views/ClientView.vue';\nimport apiRequest from '@/axios.js';\nconst requireAuth = (to, from, next) => {\n  apiRequest.get('/access', {\n    withCredentials: true,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  }).then(response => {\n    console.log(response);\n  });\n  // if (isAuthenticated()) {\n  //   next(); // Если пользователь аутентифицирован, продолжаем навигацию\n  // } else {\n  //   next('/admin/login'); // Если пользователь не аутентифицирован, перенаправляем на страницу входа\n  // }\n};\nconst routes = [{\n  path: '/',\n  name: 'client',\n  component: ClientView,\n  redirect: '/index',\n  children: [{\n    path: 'index',\n    name: 'index-client',\n    component: () => import('../components/client/IndexPage.vue')\n  }, {\n    path: 'hall/:sessionId',\n    name: 'hall-client',\n    component: () => import('../components/client/HallPage.vue'),\n    props: true\n  }, {\n    path: 'payment/:sessionId/:seatsId',\n    name: 'payment-client',\n    component: () => import('../components/client/PaymentPage.vue'),\n    props: true\n  }]\n}, {\n  path: '/admin',\n  name: 'admin',\n  redirect: '/admin/login',\n  component: () => import('../views/AdminView.vue'),\n  children: [{\n    path: 'login',\n    name: 'login-admin',\n    component: () => import('../components/admin/LoginPage.vue')\n  }, {\n    path: 'redactor',\n    name: 'redactor-admin',\n    component: () => import('../components/admin/RedactorPage.vue'),\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: requireAuth\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","ClientView","apiRequest","requireAuth","to","from","next","get","withCredentials","headers","Authorization","localStorage","getItem","then","response","console","log","routes","path","name","component","redirect","children","props","meta","requiresAuth","beforeEnter","router","history","process","env","BASE_URL"],"sources":["C:/Users/Marya/Desktop/cinema-booking-app/client/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport ClientView from '../views/ClientView.vue'\nimport apiRequest from '@/axios.js';\n\nconst requireAuth = (to, from, next) => {\n\n  apiRequest.get('/access', {\n    withCredentials: true,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  }).then(response => {\n    console.log(response);\n  })\n  // if (isAuthenticated()) {\n  //   next(); // Если пользователь аутентифицирован, продолжаем навигацию\n  // } else {\n  //   next('/admin/login'); // Если пользователь не аутентифицирован, перенаправляем на страницу входа\n  // }\n};\n\nconst routes = [\n  {\n    path: '/',\n    name: 'client',\n    component: ClientView,\n    redirect: '/index',\n    children: [\n      {\n        path: 'index',\n        name: 'index-client',\n        component: () => import('../components/client/IndexPage.vue'),\n      },\n      {\n        path: 'hall/:sessionId',\n        name: 'hall-client',\n        component: () => import('../components/client/HallPage.vue'),\n        props: true\n      },\n      {\n        path: 'payment/:sessionId/:seatsId',\n        name: 'payment-client',\n        component: () => import('../components/client/PaymentPage.vue'),\n        props: true\n      },\n    ],\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    redirect: '/admin/login',\n    component: () => import('../views/AdminView.vue'),\n    children: [\n      {\n        path: 'login',\n        name: 'login-admin',\n        component: () => import('../components/admin/LoginPage.vue'),\n      },\n      {\n        path: 'redactor',\n        name: 'redactor-admin',\n        component: () => import('../components/admin/RedactorPage.vue'),\n        meta: { requiresAuth: true },\n        beforeEnter: requireAuth\n      },\n    ]\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,YAAY;AAEnC,MAAMC,WAAW,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAEtCJ,UAAU,CAACK,GAAG,CAAC,SAAS,EAAE;IACxBC,eAAe,EAAE,IAAI;IACrBC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;IACzD;EACF,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;AACF,CAAC;AAED,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEnB,UAAU;EACrBoB,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC;EAC9D,CAAC,EACD;IACEF,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;IAC5DG,KAAK,EAAE;EACT,CAAC,EACD;IACEL,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sCAAsC,CAAC;IAC/DG,KAAK,EAAE;EACT,CAAC;AAEL,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbE,QAAQ,EAAE,cAAc;EACxBD,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDE,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC;EAC7D,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sCAAsC,CAAC;IAC/DI,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK,CAAC;IAC5BC,WAAW,EAAEvB;EACf,CAAC;AAEL,CAAC,CACF;AAED,MAAMwB,MAAM,GAAG5B,YAAY,CAAC;EAC1B6B,OAAO,EAAE5B,gBAAgB,CAAC6B,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cd;AACF,CAAC,CAAC;AAEF,eAAeU,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}